//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace QNH.Overheid.KernRegister.Business.Integration
{
    using System.Data;



    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IRelationServiceContract")]
    public interface IRelationServiceContract
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginNtSecure", ReplyAction = "http://tempuri.org/IBaseService/LoginNtSecureResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool LoginNtSecure();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginNtSecure", ReplyAction = "http://tempuri.org/IBaseService/LoginNtSecureResponse")]
        System.Threading.Tasks.Task<bool> LoginNtSecureAsync();

        // CODEGEN: Parameter 'username' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginADSecure", ReplyAction = "http://tempuri.org/IBaseService/LoginADSecureResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginADSecureResponse LoginADSecure(LoginADSecureRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginADSecure", ReplyAction = "http://tempuri.org/IBaseService/LoginADSecureResponse")]
        System.Threading.Tasks.Task<LoginADSecureResponse> LoginADSecureAsync(LoginADSecureRequest request);

        // CODEGEN: Parameter 'username' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginADSecureEX", ReplyAction = "http://tempuri.org/IBaseService/LoginADSecureEXResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginADSecureEXResponse LoginADSecureEX(LoginADSecureEXRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginADSecureEX", ReplyAction = "http://tempuri.org/IBaseService/LoginADSecureEXResponse")]
        System.Threading.Tasks.Task<LoginADSecureEXResponse> LoginADSecureEXAsync(LoginADSecureEXRequest request);

        // CODEGEN: Parameter 'username' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/Login", ReplyAction = "http://tempuri.org/IBaseService/LoginResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginResponse Login(LoginRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/Login", ReplyAction = "http://tempuri.org/IBaseService/LoginResponse")]
        System.Threading.Tasks.Task<LoginResponse> LoginAsync(LoginRequest request);

        // CODEGEN: Parameter 'LoginWithTicketResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginWithTicket", ReplyAction = "http://tempuri.org/IBaseService/LoginWithTicketResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginWithTicketResponse LoginWithTicket(LoginWithTicketRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginWithTicket", ReplyAction = "http://tempuri.org/IBaseService/LoginWithTicketResponse")]
        System.Threading.Tasks.Task<LoginWithTicketResponse> LoginWithTicketAsync(LoginWithTicketRequest request);

        // CODEGEN: Parameter 'username' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginRadius", ReplyAction = "http://tempuri.org/IBaseService/LoginRadiusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginRadiusResponse LoginRadius(LoginRadiusRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginRadius", ReplyAction = "http://tempuri.org/IBaseService/LoginRadiusResponse")]
        System.Threading.Tasks.Task<LoginRadiusResponse> LoginRadiusAsync(LoginRadiusRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginRadiusSso", ReplyAction = "http://tempuri.org/IBaseService/LoginRadiusSsoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginRadiusSsoResponse LoginRadiusSso(LoginRadiusSsoRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginRadiusSso", ReplyAction = "http://tempuri.org/IBaseService/LoginRadiusSsoResponse")]
        System.Threading.Tasks.Task<LoginRadiusSsoResponse> LoginRadiusSsoAsync(LoginRadiusSsoRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginSso", ReplyAction = "http://tempuri.org/IBaseService/LoginSsoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        LoginSsoResponse LoginSso(LoginSsoRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/LoginSso", ReplyAction = "http://tempuri.org/IBaseService/LoginSsoResponse")]
        System.Threading.Tasks.Task<LoginSsoResponse> LoginSsoAsync(LoginSsoRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/Logout", ReplyAction = "http://tempuri.org/IBaseService/LogoutResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void Logout();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IBaseService/Logout", ReplyAction = "http://tempuri.org/IBaseService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationsList", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationsListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetRelationsList(string type, string whereClause);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationsList", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationsListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRelationsListAsync(string type, string whereClause);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationsList_StandardAttributes", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationsList_StandardAttributesRe" +
            "sponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetRelationsList_StandardAttributes(string type, string whereClause, string whereClauseStandardAttributes);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationsList_StandardAttributes", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationsList_StandardAttributesRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRelationsList_StandardAttributesAsync(string type, string whereClause, string whereClauseStandardAttributes);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationsListPaged", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationsListPagedResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetRelationsListPaged(string type, string whereClause, string whereClauseStandardAttributes, Paging paging);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationsListPaged", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationsListPagedResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRelationsListPagedAsync(string type, string whereClause, string whereClauseStandardAttributes, Paging paging);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationTypesList", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationTypesListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetRelationTypesList();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationTypesList", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationTypesListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRelationTypesListAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetNewRelationIndexFields", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetNewRelationIndexFieldsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetNewRelationIndexFields(string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetNewRelationIndexFields", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetNewRelationIndexFieldsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNewRelationIndexFieldsAsync(string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationGeneralFields", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationGeneralFieldsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetRelationGeneralFields();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationGeneralFields", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationGeneralFieldsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRelationGeneralFieldsAsync();

        // CODEGEN: Parameter 'relationType' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationDefaultAuthorizationProfil" +
            "e", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationDefaultAuthorizationProfil" +
            "eResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetRelationDefaultAuthorizationProfileResponse GetRelationDefaultAuthorizationProfile(GetRelationDefaultAuthorizationProfileRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetRelationDefaultAuthorizationProfil" +
            "e", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetRelationDefaultAuthorizationProfil" +
            "eResponse")]
        System.Threading.Tasks.Task<GetRelationDefaultAuthorizationProfileResponse> GetRelationDefaultAuthorizationProfileAsync(GetRelationDefaultAuthorizationProfileRequest request);

        // CODEGEN: Parameter 'GetNewRelationAuthorizationProfilesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetNewRelationAuthorizationProfiles", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetNewRelationAuthorizationProfilesRe" +
            "sponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetNewRelationAuthorizationProfilesResponse GetNewRelationAuthorizationProfiles(GetNewRelationAuthorizationProfilesRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetNewRelationAuthorizationProfiles", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetNewRelationAuthorizationProfilesRe" +
            "sponse")]
        System.Threading.Tasks.Task<GetNewRelationAuthorizationProfilesResponse> GetNewRelationAuthorizationProfilesAsync(GetNewRelationAuthorizationProfilesRequest request);

        // CODEGEN: Parameter 'GetExistingRelationAuthorizationProfilesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetExistingRelationAuthorizationProfi" +
            "les", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetExistingRelationAuthorizationProfi" +
            "lesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        GetExistingRelationAuthorizationProfilesResponse GetExistingRelationAuthorizationProfiles(GetExistingRelationAuthorizationProfilesRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetExistingRelationAuthorizationProfi" +
            "les", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetExistingRelationAuthorizationProfi" +
            "lesResponse")]
        System.Threading.Tasks.Task<GetExistingRelationAuthorizationProfilesResponse> GetExistingRelationAuthorizationProfilesAsync(GetExistingRelationAuthorizationProfilesRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetExistingRelationIndexFields", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetExistingRelationIndexFieldsRespons" +
            "e")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetExistingRelationIndexFields(int relId, string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/GetExistingRelationIndexFields", ReplyAction = "http://tempuri.org/IRelationServiceContract/GetExistingRelationIndexFieldsRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetExistingRelationIndexFieldsAsync(int relId, string relationType);

        // CODEGEN: Parameter 'relationType' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/CreateRelation", ReplyAction = "http://tempuri.org/IRelationServiceContract/CreateRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        CreateRelationResponse CreateRelation(CreateRelationRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/CreateRelation", ReplyAction = "http://tempuri.org/IRelationServiceContract/CreateRelationResponse")]
        System.Threading.Tasks.Task<CreateRelationResponse> CreateRelationAsync(CreateRelationRequest request);

        // CODEGEN: Parameter 'relType' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/DeleteRelation", ReplyAction = "http://tempuri.org/IRelationServiceContract/DeleteRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DeleteRelationResponse DeleteRelation(DeleteRelationRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/DeleteRelation", ReplyAction = "http://tempuri.org/IRelationServiceContract/DeleteRelationResponse")]
        System.Threading.Tasks.Task<DeleteRelationResponse> DeleteRelationAsync(DeleteRelationRequest request);

        // CODEGEN: Parameter 'relationType' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/UpdateRelation", ReplyAction = "http://tempuri.org/IRelationServiceContract/UpdateRelationResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        UpdateRelationResponse UpdateRelation(UpdateRelationRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/UpdateRelation", ReplyAction = "http://tempuri.org/IRelationServiceContract/UpdateRelationResponse")]
        System.Threading.Tasks.Task<UpdateRelationResponse> UpdateRelationAsync(UpdateRelationRequest request);

        // CODEGEN: Parameter 'PrepareDateResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/PrepareDate", ReplyAction = "http://tempuri.org/IRelationServiceContract/PrepareDateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        PrepareDateResponse PrepareDate(PrepareDateRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRelationServiceContract/PrepareDate", ReplyAction = "http://tempuri.org/IRelationServiceContract/PrepareDateResponse")]
        System.Threading.Tasks.Task<PrepareDateResponse> PrepareDateAsync(PrepareDateRequest request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginADSecure", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginADSecureRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string password;

        public LoginADSecureRequest()
        {
        }

        public LoginADSecureRequest(string username, string password)
        {
            this.username = username;
            this.password = password;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginADSecureResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginADSecureResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool LoginADSecureResult;

        public LoginADSecureResponse()
        {
        }

        public LoginADSecureResponse(bool LoginADSecureResult)
        {
            this.LoginADSecureResult = LoginADSecureResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginADSecureEX", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginADSecureEXRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string password;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string domain;

        public LoginADSecureEXRequest()
        {
        }

        public LoginADSecureEXRequest(string username, string password, string domain)
        {
            this.username = username;
            this.password = password;
            this.domain = domain;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginADSecureEXResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginADSecureEXResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool LoginADSecureEXResult;

        public LoginADSecureEXResponse()
        {
        }

        public LoginADSecureEXResponse(bool LoginADSecureEXResult)
        {
            this.LoginADSecureEXResult = LoginADSecureEXResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "Login", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string password;

        public LoginRequest()
        {
        }

        public LoginRequest(string username, string password)
        {
            this.username = username;
            this.password = password;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool LoginResult;

        public LoginResponse()
        {
        }

        public LoginResponse(bool LoginResult)
        {
            this.LoginResult = LoginResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginWithTicket", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginWithTicketRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ticket;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string extraKey;

        public LoginWithTicketRequest()
        {
        }

        public LoginWithTicketRequest(string username, string ticket, string extraKey)
        {
            this.username = username;
            this.ticket = ticket;
            this.extraKey = extraKey;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginWithTicketResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginWithTicketResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string LoginWithTicketResult;

        public LoginWithTicketResponse()
        {
        }

        public LoginWithTicketResponse(string LoginWithTicketResult)
        {
            this.LoginWithTicketResult = LoginWithTicketResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginRadius", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginRadiusRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string password;

        public LoginRadiusRequest()
        {
        }

        public LoginRadiusRequest(string username, string password)
        {
            this.username = username;
            this.password = password;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginRadiusResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginRadiusResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool LoginRadiusResult;

        public LoginRadiusResponse()
        {
        }

        public LoginRadiusResponse(bool LoginRadiusResult)
        {
            this.LoginRadiusResult = LoginRadiusResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginRadiusSso", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginRadiusSsoRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string password;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string extraKey;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ticketStartDate;

        public LoginRadiusSsoRequest()
        {
        }

        public LoginRadiusSsoRequest(string username, string password, string extraKey, string ticketStartDate)
        {
            this.username = username;
            this.password = password;
            this.extraKey = extraKey;
            this.ticketStartDate = ticketStartDate;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginRadiusSsoResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginRadiusSsoResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string LoginRadiusSsoResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ticketStartDate;

        public LoginRadiusSsoResponse()
        {
        }

        public LoginRadiusSsoResponse(string LoginRadiusSsoResult, string ticketStartDate)
        {
            this.LoginRadiusSsoResult = LoginRadiusSsoResult;
            this.ticketStartDate = ticketStartDate;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginSso", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginSsoRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string username;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string password;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string extraKey;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ticketStartDate;

        public LoginSsoRequest()
        {
        }

        public LoginSsoRequest(string username, string password, string extraKey, string ticketStartDate)
        {
            this.username = username;
            this.password = password;
            this.extraKey = extraKey;
            this.ticketStartDate = ticketStartDate;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginSsoResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginSsoResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string LoginSsoResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ticketStartDate;

        public LoginSsoResponse()
        {
        }

        public LoginSsoResponse(string LoginSsoResult, string ticketStartDate)
        {
            this.LoginSsoResult = LoginSsoResult;
            this.ticketStartDate = ticketStartDate;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class Paging
    {

        private uint pageIndexField;

        private uint pageSizeField;

        private string sortColumnField;

        private bool sortDescField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public uint PageIndex
        {
            get
            {
                return this.pageIndexField;
            }
            set
            {
                this.pageIndexField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public uint PageSize
        {
            get
            {
                return this.pageSizeField;
            }
            set
            {
                this.pageSizeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public string SortColumn
        {
            get
            {
                return this.sortColumnField;
            }
            set
            {
                this.sortColumnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public bool SortDesc
        {
            get
            {
                return this.sortDescField;
            }
            set
            {
                this.sortDescField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetRelationDefaultAuthorizationProfile", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetRelationDefaultAuthorizationProfileRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string relationType;

        public GetRelationDefaultAuthorizationProfileRequest()
        {
        }

        public GetRelationDefaultAuthorizationProfileRequest(string relationType)
        {
            this.relationType = relationType;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetRelationDefaultAuthorizationProfileResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetRelationDefaultAuthorizationProfileResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int GetRelationDefaultAuthorizationProfileResult;

        public GetRelationDefaultAuthorizationProfileResponse()
        {
        }

        public GetRelationDefaultAuthorizationProfileResponse(int GetRelationDefaultAuthorizationProfileResult)
        {
            this.GetRelationDefaultAuthorizationProfileResult = GetRelationDefaultAuthorizationProfileResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetNewRelationAuthorizationProfiles", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetNewRelationAuthorizationProfilesRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string relationType;

        public GetNewRelationAuthorizationProfilesRequest()
        {
        }

        public GetNewRelationAuthorizationProfilesRequest(string relationType)
        {
            this.relationType = relationType;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetNewRelationAuthorizationProfilesResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetNewRelationAuthorizationProfilesResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Data.DataSet GetNewRelationAuthorizationProfilesResult;

        public GetNewRelationAuthorizationProfilesResponse()
        {
        }

        public GetNewRelationAuthorizationProfilesResponse(System.Data.DataSet GetNewRelationAuthorizationProfilesResult)
        {
            this.GetNewRelationAuthorizationProfilesResult = GetNewRelationAuthorizationProfilesResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetExistingRelationAuthorizationProfiles", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetExistingRelationAuthorizationProfilesRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int relId;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string relationType;

        public GetExistingRelationAuthorizationProfilesRequest()
        {
        }

        public GetExistingRelationAuthorizationProfilesRequest(int relId, string relationType)
        {
            this.relId = relId;
            this.relationType = relationType;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetExistingRelationAuthorizationProfilesResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetExistingRelationAuthorizationProfilesResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Data.DataSet GetExistingRelationAuthorizationProfilesResult;

        public GetExistingRelationAuthorizationProfilesResponse()
        {
        }

        public GetExistingRelationAuthorizationProfilesResponse(System.Data.DataSet GetExistingRelationAuthorizationProfilesResult)
        {
            this.GetExistingRelationAuthorizationProfilesResult = GetExistingRelationAuthorizationProfilesResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "CreateRelation", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class CreateRelationRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string relationType;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int authorizationProfileID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public int processID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Data.DataSet indexFields;

        public CreateRelationRequest()
        {
        }

        public CreateRelationRequest(string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            this.relationType = relationType;
            this.authorizationProfileID = authorizationProfileID;
            this.processID = processID;
            this.indexFields = indexFields;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "CreateRelationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class CreateRelationResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int CreateRelationResult;

        public CreateRelationResponse()
        {
        }

        public CreateRelationResponse(int CreateRelationResult)
        {
            this.CreateRelationResult = CreateRelationResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "DeleteRelation", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class DeleteRelationRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int relId;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string relType;

        public DeleteRelationRequest()
        {
        }

        public DeleteRelationRequest(int relId, string relType)
        {
            this.relId = relId;
            this.relType = relType;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "DeleteRelationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class DeleteRelationResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool DeleteRelationResult;

        public DeleteRelationResponse()
        {
        }

        public DeleteRelationResponse(bool DeleteRelationResult)
        {
            this.DeleteRelationResult = DeleteRelationResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "UpdateRelation", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class UpdateRelationRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int relId;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string relationType;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public int authorizationProfileID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public int processID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public System.Data.DataSet indexFields;

        public UpdateRelationRequest()
        {
        }

        public UpdateRelationRequest(int relId, string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            this.relId = relId;
            this.relationType = relationType;
            this.authorizationProfileID = authorizationProfileID;
            this.processID = processID;
            this.indexFields = indexFields;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "UpdateRelationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class UpdateRelationResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool UpdateRelationResult;

        public UpdateRelationResponse()
        {
        }

        public UpdateRelationResponse(bool UpdateRelationResult)
        {
            this.UpdateRelationResult = UpdateRelationResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "PrepareDate", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class PrepareDateRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public System.DateTime date;

        public PrepareDateRequest()
        {
        }

        public PrepareDateRequest(System.DateTime date)
        {
            this.date = date;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "PrepareDateResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class PrepareDateResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string PrepareDateResult;

        public PrepareDateResponse()
        {
        }

        public PrepareDateResponse(string PrepareDateResult)
        {
            this.PrepareDateResult = PrepareDateResult;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelationServiceContractChannel : IRelationServiceContract, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelationServiceContractClient : System.ServiceModel.ClientBase<IRelationServiceContract>, IRelationServiceContract
    {

        public RelationServiceContractClient()
        {
        }

        public RelationServiceContractClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public RelationServiceContractClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public RelationServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public RelationServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public bool LoginNtSecure()
        {
            return base.Channel.LoginNtSecure();
        }

        public System.Threading.Tasks.Task<bool> LoginNtSecureAsync()
        {
            return base.Channel.LoginNtSecureAsync();
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginADSecureResponse IRelationServiceContract.LoginADSecure(LoginADSecureRequest request)
        {
            return base.Channel.LoginADSecure(request);
        }

        public bool LoginADSecure(string username, string password)
        {
            LoginADSecureRequest inValue = new LoginADSecureRequest();
            inValue.username = username;
            inValue.password = password;
            LoginADSecureResponse retVal = ((IRelationServiceContract)(this)).LoginADSecure(inValue);
            return retVal.LoginADSecureResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LoginADSecureResponse> IRelationServiceContract.LoginADSecureAsync(LoginADSecureRequest request)
        {
            return base.Channel.LoginADSecureAsync(request);
        }

        public System.Threading.Tasks.Task<LoginADSecureResponse> LoginADSecureAsync(string username, string password)
        {
            LoginADSecureRequest inValue = new LoginADSecureRequest();
            inValue.username = username;
            inValue.password = password;
            return ((IRelationServiceContract)(this)).LoginADSecureAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginADSecureEXResponse IRelationServiceContract.LoginADSecureEX(LoginADSecureEXRequest request)
        {
            return base.Channel.LoginADSecureEX(request);
        }

        public bool LoginADSecureEX(string username, string password, string domain)
        {
            LoginADSecureEXRequest inValue = new LoginADSecureEXRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.domain = domain;
            LoginADSecureEXResponse retVal = ((IRelationServiceContract)(this)).LoginADSecureEX(inValue);
            return retVal.LoginADSecureEXResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LoginADSecureEXResponse> IRelationServiceContract.LoginADSecureEXAsync(LoginADSecureEXRequest request)
        {
            return base.Channel.LoginADSecureEXAsync(request);
        }

        public System.Threading.Tasks.Task<LoginADSecureEXResponse> LoginADSecureEXAsync(string username, string password, string domain)
        {
            LoginADSecureEXRequest inValue = new LoginADSecureEXRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.domain = domain;
            return ((IRelationServiceContract)(this)).LoginADSecureEXAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginResponse IRelationServiceContract.Login(LoginRequest request)
        {
            return base.Channel.Login(request);
        }

        public bool Login(string username, string password)
        {
            LoginRequest inValue = new LoginRequest();
            inValue.username = username;
            inValue.password = password;
            LoginResponse retVal = ((IRelationServiceContract)(this)).Login(inValue);
            return retVal.LoginResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LoginResponse> IRelationServiceContract.LoginAsync(LoginRequest request)
        {
            return base.Channel.LoginAsync(request);
        }

        public System.Threading.Tasks.Task<LoginResponse> LoginAsync(string username, string password)
        {
            LoginRequest inValue = new LoginRequest();
            inValue.username = username;
            inValue.password = password;
            return ((IRelationServiceContract)(this)).LoginAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginWithTicketResponse IRelationServiceContract.LoginWithTicket(LoginWithTicketRequest request)
        {
            return base.Channel.LoginWithTicket(request);
        }

        public string LoginWithTicket(string username, string ticket, string extraKey)
        {
            LoginWithTicketRequest inValue = new LoginWithTicketRequest();
            inValue.username = username;
            inValue.ticket = ticket;
            inValue.extraKey = extraKey;
            LoginWithTicketResponse retVal = ((IRelationServiceContract)(this)).LoginWithTicket(inValue);
            return retVal.LoginWithTicketResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LoginWithTicketResponse> IRelationServiceContract.LoginWithTicketAsync(LoginWithTicketRequest request)
        {
            return base.Channel.LoginWithTicketAsync(request);
        }

        public System.Threading.Tasks.Task<LoginWithTicketResponse> LoginWithTicketAsync(string username, string ticket, string extraKey)
        {
            LoginWithTicketRequest inValue = new LoginWithTicketRequest();
            inValue.username = username;
            inValue.ticket = ticket;
            inValue.extraKey = extraKey;
            return ((IRelationServiceContract)(this)).LoginWithTicketAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginRadiusResponse IRelationServiceContract.LoginRadius(LoginRadiusRequest request)
        {
            return base.Channel.LoginRadius(request);
        }

        public bool LoginRadius(string username, string password)
        {
            LoginRadiusRequest inValue = new LoginRadiusRequest();
            inValue.username = username;
            inValue.password = password;
            LoginRadiusResponse retVal = ((IRelationServiceContract)(this)).LoginRadius(inValue);
            return retVal.LoginRadiusResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LoginRadiusResponse> IRelationServiceContract.LoginRadiusAsync(LoginRadiusRequest request)
        {
            return base.Channel.LoginRadiusAsync(request);
        }

        public System.Threading.Tasks.Task<LoginRadiusResponse> LoginRadiusAsync(string username, string password)
        {
            LoginRadiusRequest inValue = new LoginRadiusRequest();
            inValue.username = username;
            inValue.password = password;
            return ((IRelationServiceContract)(this)).LoginRadiusAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginRadiusSsoResponse IRelationServiceContract.LoginRadiusSso(LoginRadiusSsoRequest request)
        {
            return base.Channel.LoginRadiusSso(request);
        }

        public string LoginRadiusSso(string username, string password, string extraKey, ref string ticketStartDate)
        {
            LoginRadiusSsoRequest inValue = new LoginRadiusSsoRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.extraKey = extraKey;
            inValue.ticketStartDate = ticketStartDate;
            LoginRadiusSsoResponse retVal = ((IRelationServiceContract)(this)).LoginRadiusSso(inValue);
            ticketStartDate = retVal.ticketStartDate;
            return retVal.LoginRadiusSsoResult;
        }

        public System.Threading.Tasks.Task<LoginRadiusSsoResponse> LoginRadiusSsoAsync(LoginRadiusSsoRequest request)
        {
            return base.Channel.LoginRadiusSsoAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LoginSsoResponse IRelationServiceContract.LoginSso(LoginSsoRequest request)
        {
            return base.Channel.LoginSso(request);
        }

        public string LoginSso(string username, string password, string extraKey, ref string ticketStartDate)
        {
            LoginSsoRequest inValue = new LoginSsoRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.extraKey = extraKey;
            inValue.ticketStartDate = ticketStartDate;
            LoginSsoResponse retVal = ((IRelationServiceContract)(this)).LoginSso(inValue);
            ticketStartDate = retVal.ticketStartDate;
            return retVal.LoginSsoResult;
        }

        public System.Threading.Tasks.Task<LoginSsoResponse> LoginSsoAsync(LoginSsoRequest request)
        {
            return base.Channel.LoginSsoAsync(request);
        }

        public void Logout()
        {
            base.Channel.Logout();
        }

        public System.Threading.Tasks.Task LogoutAsync()
        {
            return base.Channel.LogoutAsync();
        }

        public System.Data.DataSet GetRelationsList(string type, string whereClause)
        {
            return base.Channel.GetRelationsList(type, whereClause);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetRelationsListAsync(string type, string whereClause)
        {
            return base.Channel.GetRelationsListAsync(type, whereClause);
        }

        public System.Data.DataSet GetRelationsList_StandardAttributes(string type, string whereClause, string whereClauseStandardAttributes)
        {
            return base.Channel.GetRelationsList_StandardAttributes(type, whereClause, whereClauseStandardAttributes);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetRelationsList_StandardAttributesAsync(string type, string whereClause, string whereClauseStandardAttributes)
        {
            return base.Channel.GetRelationsList_StandardAttributesAsync(type, whereClause, whereClauseStandardAttributes);
        }

        public System.Data.DataSet GetRelationsListPaged(string type, string whereClause, string whereClauseStandardAttributes, Paging paging)
        {
            return base.Channel.GetRelationsListPaged(type, whereClause, whereClauseStandardAttributes, paging);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetRelationsListPagedAsync(string type, string whereClause, string whereClauseStandardAttributes, Paging paging)
        {
            return base.Channel.GetRelationsListPagedAsync(type, whereClause, whereClauseStandardAttributes, paging);
        }

        public System.Data.DataSet GetRelationTypesList()
        {
            return base.Channel.GetRelationTypesList();
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetRelationTypesListAsync()
        {
            return base.Channel.GetRelationTypesListAsync();
        }

        public System.Data.DataSet GetNewRelationIndexFields(string relationType)
        {
            return base.Channel.GetNewRelationIndexFields(relationType);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetNewRelationIndexFieldsAsync(string relationType)
        {
            return base.Channel.GetNewRelationIndexFieldsAsync(relationType);
        }

        public System.Data.DataSet GetRelationGeneralFields()
        {
            return base.Channel.GetRelationGeneralFields();
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetRelationGeneralFieldsAsync()
        {
            return base.Channel.GetRelationGeneralFieldsAsync();
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetRelationDefaultAuthorizationProfileResponse IRelationServiceContract.GetRelationDefaultAuthorizationProfile(GetRelationDefaultAuthorizationProfileRequest request)
        {
            return base.Channel.GetRelationDefaultAuthorizationProfile(request);
        }

        public int GetRelationDefaultAuthorizationProfile(string relationType)
        {
            GetRelationDefaultAuthorizationProfileRequest inValue = new GetRelationDefaultAuthorizationProfileRequest();
            inValue.relationType = relationType;
            GetRelationDefaultAuthorizationProfileResponse retVal = ((IRelationServiceContract)(this)).GetRelationDefaultAuthorizationProfile(inValue);
            return retVal.GetRelationDefaultAuthorizationProfileResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetRelationDefaultAuthorizationProfileResponse> IRelationServiceContract.GetRelationDefaultAuthorizationProfileAsync(GetRelationDefaultAuthorizationProfileRequest request)
        {
            return base.Channel.GetRelationDefaultAuthorizationProfileAsync(request);
        }

        public System.Threading.Tasks.Task<GetRelationDefaultAuthorizationProfileResponse> GetRelationDefaultAuthorizationProfileAsync(string relationType)
        {
            GetRelationDefaultAuthorizationProfileRequest inValue = new GetRelationDefaultAuthorizationProfileRequest();
            inValue.relationType = relationType;
            return ((IRelationServiceContract)(this)).GetRelationDefaultAuthorizationProfileAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetNewRelationAuthorizationProfilesResponse IRelationServiceContract.GetNewRelationAuthorizationProfiles(GetNewRelationAuthorizationProfilesRequest request)
        {
            return base.Channel.GetNewRelationAuthorizationProfiles(request);
        }

        public System.Data.DataSet GetNewRelationAuthorizationProfiles(string relationType)
        {
            GetNewRelationAuthorizationProfilesRequest inValue = new GetNewRelationAuthorizationProfilesRequest();
            inValue.relationType = relationType;
            GetNewRelationAuthorizationProfilesResponse retVal = ((IRelationServiceContract)(this)).GetNewRelationAuthorizationProfiles(inValue);
            return retVal.GetNewRelationAuthorizationProfilesResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetNewRelationAuthorizationProfilesResponse> IRelationServiceContract.GetNewRelationAuthorizationProfilesAsync(GetNewRelationAuthorizationProfilesRequest request)
        {
            return base.Channel.GetNewRelationAuthorizationProfilesAsync(request);
        }

        public System.Threading.Tasks.Task<GetNewRelationAuthorizationProfilesResponse> GetNewRelationAuthorizationProfilesAsync(string relationType)
        {
            GetNewRelationAuthorizationProfilesRequest inValue = new GetNewRelationAuthorizationProfilesRequest();
            inValue.relationType = relationType;
            return ((IRelationServiceContract)(this)).GetNewRelationAuthorizationProfilesAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetExistingRelationAuthorizationProfilesResponse IRelationServiceContract.GetExistingRelationAuthorizationProfiles(GetExistingRelationAuthorizationProfilesRequest request)
        {
            return base.Channel.GetExistingRelationAuthorizationProfiles(request);
        }

        public System.Data.DataSet GetExistingRelationAuthorizationProfiles(int relId, string relationType)
        {
            GetExistingRelationAuthorizationProfilesRequest inValue = new GetExistingRelationAuthorizationProfilesRequest();
            inValue.relId = relId;
            inValue.relationType = relationType;
            GetExistingRelationAuthorizationProfilesResponse retVal = ((IRelationServiceContract)(this)).GetExistingRelationAuthorizationProfiles(inValue);
            return retVal.GetExistingRelationAuthorizationProfilesResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetExistingRelationAuthorizationProfilesResponse> IRelationServiceContract.GetExistingRelationAuthorizationProfilesAsync(GetExistingRelationAuthorizationProfilesRequest request)
        {
            return base.Channel.GetExistingRelationAuthorizationProfilesAsync(request);
        }

        public System.Threading.Tasks.Task<GetExistingRelationAuthorizationProfilesResponse> GetExistingRelationAuthorizationProfilesAsync(int relId, string relationType)
        {
            GetExistingRelationAuthorizationProfilesRequest inValue = new GetExistingRelationAuthorizationProfilesRequest();
            inValue.relId = relId;
            inValue.relationType = relationType;
            return ((IRelationServiceContract)(this)).GetExistingRelationAuthorizationProfilesAsync(inValue);
        }

        public System.Data.DataSet GetExistingRelationIndexFields(int relId, string relationType)
        {
            return base.Channel.GetExistingRelationIndexFields(relId, relationType);
        }

        public System.Threading.Tasks.Task<System.Data.DataSet> GetExistingRelationIndexFieldsAsync(int relId, string relationType)
        {
            return base.Channel.GetExistingRelationIndexFieldsAsync(relId, relationType);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateRelationResponse IRelationServiceContract.CreateRelation(CreateRelationRequest request)
        {
            return base.Channel.CreateRelation(request);
        }

        public int CreateRelation(string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            CreateRelationRequest inValue = new CreateRelationRequest();
            inValue.relationType = relationType;
            inValue.authorizationProfileID = authorizationProfileID;
            inValue.processID = processID;
            inValue.indexFields = indexFields;
            CreateRelationResponse retVal = ((IRelationServiceContract)(this)).CreateRelation(inValue);
            return retVal.CreateRelationResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CreateRelationResponse> IRelationServiceContract.CreateRelationAsync(CreateRelationRequest request)
        {
            return base.Channel.CreateRelationAsync(request);
        }

        public System.Threading.Tasks.Task<CreateRelationResponse> CreateRelationAsync(string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            CreateRelationRequest inValue = new CreateRelationRequest();
            inValue.relationType = relationType;
            inValue.authorizationProfileID = authorizationProfileID;
            inValue.processID = processID;
            inValue.indexFields = indexFields;
            return ((IRelationServiceContract)(this)).CreateRelationAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeleteRelationResponse IRelationServiceContract.DeleteRelation(DeleteRelationRequest request)
        {
            return base.Channel.DeleteRelation(request);
        }

        public bool DeleteRelation(int relId, string relType)
        {
            DeleteRelationRequest inValue = new DeleteRelationRequest();
            inValue.relId = relId;
            inValue.relType = relType;
            DeleteRelationResponse retVal = ((IRelationServiceContract)(this)).DeleteRelation(inValue);
            return retVal.DeleteRelationResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DeleteRelationResponse> IRelationServiceContract.DeleteRelationAsync(DeleteRelationRequest request)
        {
            return base.Channel.DeleteRelationAsync(request);
        }

        public System.Threading.Tasks.Task<DeleteRelationResponse> DeleteRelationAsync(int relId, string relType)
        {
            DeleteRelationRequest inValue = new DeleteRelationRequest();
            inValue.relId = relId;
            inValue.relType = relType;
            return ((IRelationServiceContract)(this)).DeleteRelationAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UpdateRelationResponse IRelationServiceContract.UpdateRelation(UpdateRelationRequest request)
        {
            return base.Channel.UpdateRelation(request);
        }

        public bool UpdateRelation(int relId, string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            UpdateRelationRequest inValue = new UpdateRelationRequest();
            inValue.relId = relId;
            inValue.relationType = relationType;
            inValue.authorizationProfileID = authorizationProfileID;
            inValue.processID = processID;
            inValue.indexFields = indexFields;
            UpdateRelationResponse retVal = ((IRelationServiceContract)(this)).UpdateRelation(inValue);
            return retVal.UpdateRelationResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UpdateRelationResponse> IRelationServiceContract.UpdateRelationAsync(UpdateRelationRequest request)
        {
            return base.Channel.UpdateRelationAsync(request);
        }

        public System.Threading.Tasks.Task<UpdateRelationResponse> UpdateRelationAsync(int relId, string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            UpdateRelationRequest inValue = new UpdateRelationRequest();
            inValue.relId = relId;
            inValue.relationType = relationType;
            inValue.authorizationProfileID = authorizationProfileID;
            inValue.processID = processID;
            inValue.indexFields = indexFields;
            return ((IRelationServiceContract)(this)).UpdateRelationAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PrepareDateResponse IRelationServiceContract.PrepareDate(PrepareDateRequest request)
        {
            return base.Channel.PrepareDate(request);
        }

        public string PrepareDate(System.DateTime date)
        {
            PrepareDateRequest inValue = new PrepareDateRequest();
            inValue.date = date;
            PrepareDateResponse retVal = ((IRelationServiceContract)(this)).PrepareDate(inValue);
            return retVal.PrepareDateResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PrepareDateResponse> IRelationServiceContract.PrepareDateAsync(PrepareDateRequest request)
        {
            return base.Channel.PrepareDateAsync(request);
        }

        public System.Threading.Tasks.Task<PrepareDateResponse> PrepareDateAsync(System.DateTime date)
        {
            PrepareDateRequest inValue = new PrepareDateRequest();
            inValue.date = date;
            return ((IRelationServiceContract)(this)).PrepareDateAsync(inValue);
        }
    }

}