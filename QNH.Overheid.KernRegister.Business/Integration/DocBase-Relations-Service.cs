//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QNH.Overheid.KernRegister.Business.Integration
{
    using System.Data;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://acanthis.com/DocNet/WS_API/", ConfigurationName = "Relations.RelationsSoap")]
    public interface RelationsSoap
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetRelationsList", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetRelationsList(string p_strType, string p_strWhereClause);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetRelationTypesList", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetRelationTypesList();

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetNewRelationIndexFields", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetNewRelationIndexFields(string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetRelationGeneralFields", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetRelationGeneralFields();

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetRelationDefaultAuthorizationProfile", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        int GetRelationDefaultAuthorizationProfile(string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetNewRelationAuthorizationProfiles", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetNewRelationAuthorizationProfiles(string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetExistingRelationAuthorizationProfiles", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetExistingRelationAuthorizationProfiles(int relId, string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/GetExistingRelationIndexFields", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetExistingRelationIndexFields(int relId, string relationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/CreateRelation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        int CreateRelation(string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/DeleteRelation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool DeleteRelation(int relId, string relType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://acanthis.com/DocNet/WS_API/UpdateRelation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool UpdateRelation(int relId, string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RelationsSoapChannel : QNH.Overheid.KernRegister.Business.Integration.RelationsSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelationsSoapClient : System.ServiceModel.ClientBase<QNH.Overheid.KernRegister.Business.Integration.RelationsSoap>, QNH.Overheid.KernRegister.Business.Integration.RelationsSoap
    {

        public RelationsSoapClient()
        {
        }

        public RelationsSoapClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public RelationsSoapClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public RelationsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public RelationsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Data.DataSet GetRelationsList(string p_strType, string p_strWhereClause)
        {
            return base.Channel.GetRelationsList(p_strType, p_strWhereClause);
        }

        public System.Data.DataSet GetRelationTypesList()
        {
            return base.Channel.GetRelationTypesList();
        }

        public System.Data.DataSet GetNewRelationIndexFields(string relationType)
        {
            return base.Channel.GetNewRelationIndexFields(relationType);
        }

        public System.Data.DataSet GetRelationGeneralFields()
        {
            return base.Channel.GetRelationGeneralFields();
        }

        public int GetRelationDefaultAuthorizationProfile(string relationType)
        {
            return base.Channel.GetRelationDefaultAuthorizationProfile(relationType);
        }

        public System.Data.DataSet GetNewRelationAuthorizationProfiles(string relationType)
        {
            return base.Channel.GetNewRelationAuthorizationProfiles(relationType);
        }

        public System.Data.DataSet GetExistingRelationAuthorizationProfiles(int relId, string relationType)
        {
            return base.Channel.GetExistingRelationAuthorizationProfiles(relId, relationType);
        }

        public System.Data.DataSet GetExistingRelationIndexFields(int relId, string relationType)
        {
            return base.Channel.GetExistingRelationIndexFields(relId, relationType);
        }

        public int CreateRelation(string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            return base.Channel.CreateRelation(relationType, authorizationProfileID, processID, indexFields);
        }

        public bool DeleteRelation(int relId, string relType)
        {
            return base.Channel.DeleteRelation(relId, relType);
        }

        public bool UpdateRelation(int relId, string relationType, int authorizationProfileID, int processID, System.Data.DataSet indexFields)
        {
            return base.Channel.UpdateRelation(relId, relationType, authorizationProfileID, processID, indexFields);
        }
    }
}

