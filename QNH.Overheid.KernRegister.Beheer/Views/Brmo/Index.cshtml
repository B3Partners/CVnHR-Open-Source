@model QNH.Overheid.KernRegister.Beheer.ViewModel.RsgbTaskSchedulerModel
@using Microsoft.Win32.TaskScheduler

@{
    ViewBag.Title = "Export to " + Default.BrmoApplication;
}

@section customstyles
{
    @Styles.Render("~/bundles/fileupload/bootstrap/BasicPlusUI/css")
    <style>
        .form-batch .row {
            margin-bottom: 5px;
        }

        .error {
            color: red;
        }

        select[disabled] {
            background-color: #e4e4e4;
        }
    </style>
}

<div>
    <!-- The file upload form used as target for the file upload widget -->
    <div class="row">
        <div class="col-sm-3">
            <h3>@Default.BrmoApplication</h3>
            <p>Op deze pagina kan automatisch de batchupdate gestart worden naar @Default.BrmoApplication</p>
        </div>
        <div class="col-sm-9">
            <h3>Plan een batchupdate</h3>
            <p>Plan hier de batchupdate van @Default.BrmoApplication</p>
            <br>
            <div class="row">
                <div class="col-sm-4">Taak naam</div>
                <div class="col-sm-8">
                    <input type='text' class="form-control" id="Task-name" />
                </div>
            </div>
            @Html.Partial("_TaskSchedulerPartial", Model.ExportTaskManager)
        </div>
    </div>
    <div class="row">
        <hr />
        <div class="col-sm-3">
            <h3>Config</h3>
        </div>
        <div class="col-sm-9 brmo-config">
            <label>HR-Dataservice version:</label>
            @Html.DropDownListFor(m => m.Config.HRDataserviceVersion,
              Model.Config.PossibleHRDataserviceVersions.Select(m => new SelectListItem() { Text = m, Value = m, Selected = m == "3.0" }), htmlAttributes: null)

            <br />
            <label>Process type:</label>
            @Html.DropDownListFor(m => m.Config.BrmoProcessType,
              Model.Config.PossibleBrmoProcessTypes
                .Select(m => new SelectListItem()
                     {
                    Text = m,
                    Value = m,
                    Selected = m == QNH.Overheid.KernRegister.Business.Enums.BrmoProcessTypes.Csv.ToString()
                })
              , new { id = "processType" })
            <div class="brmo-config-area">
                <br />
                <label>Postcodes/KvkIds</label>
                <br />
                <textarea id="Brmo-PostCodes" cols="80" rows="6" style="text-align:left;">@string.Join(", ", Model.Config.PostCodes)</textarea>

                <br />
                <button class="btn btn-default btn-primary btn-save-config">Save</button>
            </div>
            <div class="brmo-config-area-csv">
                @Html.Partial("_BackloadPartial")
                <br />
                <button class="btn btn-default btn-primary btn-save-config">Save</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!-- We use Backloads. bundeling feature to register only those client side javascript and style files of the jQuery File Upload Plugin that are needed  -->
    @Scripts.Render("~/bundles/fileupload/bootstrap/BasicPlusUI/js")

    <!-- Initialize the jQuery File Upload Plugin -->
    <script src="~/Scripts/FileUpload/brmo.js"></script>
    <script src="~/Scripts/FileUpload/InitializeFileUpload.js"></script>

    @if (!Model.ExportTaskManager.ExecutableProcessDisabled)
    {
        @TaskSchedulerScript.RenderTaskSchedulerScript(Url, Model.ExportTaskManager.Trigger, Model.ExportTaskManager.Trigger == null ? TaskTriggerType.Time : Model.ExportTaskManager.Trigger.TriggerType)
    }

}